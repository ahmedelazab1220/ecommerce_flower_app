// Mocks generated by Mockito 5.4.5 from annotations
// in ecommerce_flower_app/test/features/auth/data/repo_impl/auth_repo_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i8;

import 'package:ecommerce_flower_app/core/utils/datasource_excution/api_manager.dart'
    as _i7;
import 'package:ecommerce_flower_app/core/utils/datasource_excution/api_result.dart'
    as _i9;
import 'package:ecommerce_flower_app/features/auth/data/data_source/contract/auth_local_data_source.dart'
    as _i17;
import 'package:ecommerce_flower_app/features/auth/data/data_source/contract/auth_remote_data_source.dart'
    as _i11;
import 'package:ecommerce_flower_app/features/auth/data/model/forget_password/forget_password_request_dto.dart'
    as _i14;
import 'package:ecommerce_flower_app/features/auth/data/model/forget_password/forget_password_response_dto.dart'
    as _i4;
import 'package:ecommerce_flower_app/features/auth/data/model/login/request/login_request_dto.dart'
    as _i12;
import 'package:ecommerce_flower_app/features/auth/data/model/login/response/login_response_dto.dart'
    as _i2;
import 'package:ecommerce_flower_app/features/auth/data/model/register/register_request_dto/register_request_dto.dart'
    as _i13;
import 'package:ecommerce_flower_app/features/auth/data/model/register/register_response_dto/register_response_dto.dart'
    as _i3;
import 'package:ecommerce_flower_app/features/auth/data/model/reset_password/reset_password_request_dto.dart'
    as _i15;
import 'package:ecommerce_flower_app/features/auth/data/model/reset_password/reset_password_response_dto.dart'
    as _i5;
import 'package:ecommerce_flower_app/features/auth/data/model/verify_reset_code/verify_reset_code_request_dto.dart'
    as _i16;
import 'package:ecommerce_flower_app/features/auth/data/model/verify_reset_code/verify_reset_code_response_dto.dart'
    as _i6;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i10;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeLoginResponseDto_0 extends _i1.SmartFake
    implements _i2.LoginResponseDto {
  _FakeLoginResponseDto_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRegisterResponseDto_1 extends _i1.SmartFake
    implements _i3.RegisterResponseDto {
  _FakeRegisterResponseDto_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeForgetPasswordResponseDto_2 extends _i1.SmartFake
    implements _i4.ForgetPasswordResponseDto {
  _FakeForgetPasswordResponseDto_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeResetPasswordResponseDto_3 extends _i1.SmartFake
    implements _i5.ResetPasswordResponseDto {
  _FakeResetPasswordResponseDto_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeVerifyResetCodeResponseDto_4 extends _i1.SmartFake
    implements _i6.VerifyResetCodeResponseDto {
  _FakeVerifyResetCodeResponseDto_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [ApiManager].
///
/// See the documentation for Mockito's code generation for more information.
class MockApiManager extends _i1.Mock implements _i7.ApiManager {
  MockApiManager() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.Future<_i9.Result<T>> execute<T>(_i8.Future<T> Function()? apiCall) =>
      (super.noSuchMethod(
        Invocation.method(
          #execute,
          [apiCall],
        ),
        returnValue:
            _i8.Future<_i9.Result<T>>.value(_i10.dummyValue<_i9.Result<T>>(
          this,
          Invocation.method(
            #execute,
            [apiCall],
          ),
        )),
      ) as _i8.Future<_i9.Result<T>>);
}

/// A class which mocks [AuthRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthRemoteDataSource extends _i1.Mock
    implements _i11.AuthRemoteDataSource {
  MockAuthRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.Future<_i2.LoginResponseDto> login(_i12.LoginRequestDto? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #login,
          [request],
        ),
        returnValue:
            _i8.Future<_i2.LoginResponseDto>.value(_FakeLoginResponseDto_0(
          this,
          Invocation.method(
            #login,
            [request],
          ),
        )),
      ) as _i8.Future<_i2.LoginResponseDto>);

  @override
  _i8.Future<_i3.RegisterResponseDto> signUp(
          _i13.RegisterRequestDto? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #signUp,
          [request],
        ),
        returnValue: _i8.Future<_i3.RegisterResponseDto>.value(
            _FakeRegisterResponseDto_1(
          this,
          Invocation.method(
            #signUp,
            [request],
          ),
        )),
      ) as _i8.Future<_i3.RegisterResponseDto>);

  @override
  _i8.Future<_i4.ForgetPasswordResponseDto> forgetPassword(
          _i14.ForgetPasswordRequestDto? forgetPasswordRequestDto) =>
      (super.noSuchMethod(
        Invocation.method(
          #forgetPassword,
          [forgetPasswordRequestDto],
        ),
        returnValue: _i8.Future<_i4.ForgetPasswordResponseDto>.value(
            _FakeForgetPasswordResponseDto_2(
          this,
          Invocation.method(
            #forgetPassword,
            [forgetPasswordRequestDto],
          ),
        )),
      ) as _i8.Future<_i4.ForgetPasswordResponseDto>);

  @override
  _i8.Future<_i5.ResetPasswordResponseDto> resetPassword(
          _i15.ResetPasswordRequestDto? resetPasswordRequestDto) =>
      (super.noSuchMethod(
        Invocation.method(
          #resetPassword,
          [resetPasswordRequestDto],
        ),
        returnValue: _i8.Future<_i5.ResetPasswordResponseDto>.value(
            _FakeResetPasswordResponseDto_3(
          this,
          Invocation.method(
            #resetPassword,
            [resetPasswordRequestDto],
          ),
        )),
      ) as _i8.Future<_i5.ResetPasswordResponseDto>);

  @override
  _i8.Future<_i6.VerifyResetCodeResponseDto> verifyResetCode(
          _i16.VerifyResetCodeRequestDto? verifyResetCodeRequestDto) =>
      (super.noSuchMethod(
        Invocation.method(
          #verifyResetCode,
          [verifyResetCodeRequestDto],
        ),
        returnValue: _i8.Future<_i6.VerifyResetCodeResponseDto>.value(
            _FakeVerifyResetCodeResponseDto_4(
          this,
          Invocation.method(
            #verifyResetCode,
            [verifyResetCodeRequestDto],
          ),
        )),
      ) as _i8.Future<_i6.VerifyResetCodeResponseDto>);
}

/// A class which mocks [AuthLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthLocalDataSource extends _i1.Mock
    implements _i17.AuthLocalDataSource {
  MockAuthLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.Future<void> saveToken(
    String? key,
    String? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveToken,
          [
            key,
            value,
          ],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<String?> getToken(String? key) => (super.noSuchMethod(
        Invocation.method(
          #getToken,
          [key],
        ),
        returnValue: _i8.Future<String?>.value(),
      ) as _i8.Future<String?>);

  @override
  _i8.Future<void> deleteToken(String? key) => (super.noSuchMethod(
        Invocation.method(
          #deleteToken,
          [key],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> setRememberMe(bool? value) => (super.noSuchMethod(
        Invocation.method(
          #setRememberMe,
          [value],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<bool> isRememberMe() => (super.noSuchMethod(
        Invocation.method(
          #isRememberMe,
          [],
        ),
        returnValue: _i8.Future<bool>.value(false),
      ) as _i8.Future<bool>);

  @override
  _i8.Future<void> clearAll() => (super.noSuchMethod(
        Invocation.method(
          #clearAll,
          [],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> enableGuestUser() => (super.noSuchMethod(
        Invocation.method(
          #enableGuestUser,
          [],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> disableGuestUser() => (super.noSuchMethod(
        Invocation.method(
          #disableGuestUser,
          [],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<bool> isGuestUser() => (super.noSuchMethod(
        Invocation.method(
          #isGuestUser,
          [],
        ),
        returnValue: _i8.Future<bool>.value(false),
      ) as _i8.Future<bool>);
}
