// Mocks generated by Mockito 5.4.5 from annotations
// in ecommerce_flower_app/test/features/auth/presentation/view_model/forget_password_cubit_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:ecommerce_flower_app/core/utils/datasource_excution/api_result.dart'
    as _i4;
import 'package:ecommerce_flower_app/core/utils/validator/validator.dart'
    as _i7;
import 'package:ecommerce_flower_app/features/auth/data/model/forget_password/forget_password_request_dto.dart'
    as _i5;
import 'package:ecommerce_flower_app/features/auth/domain/usecase/forget_password_usecase.dart'
    as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i6;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [ForgetPasswordUsecase].
///
/// See the documentation for Mockito's code generation for more information.
class MockForgetPasswordUsecase extends _i1.Mock
    implements _i2.ForgetPasswordUsecase {
  MockForgetPasswordUsecase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<_i4.Result<void>> call(
          _i5.ForgetPasswordRequestDto? forgetPasswordRequest) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [forgetPasswordRequest],
        ),
        returnValue:
            _i3.Future<_i4.Result<void>>.value(_i6.dummyValue<_i4.Result<void>>(
          this,
          Invocation.method(
            #call,
            [forgetPasswordRequest],
          ),
        )),
      ) as _i3.Future<_i4.Result<void>>);
}

/// A class which mocks [Validator].
///
/// See the documentation for Mockito's code generation for more information.
class MockValidator extends _i1.Mock implements _i7.Validator {
  MockValidator() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String? validateEmail(String? input) => (super.noSuchMethod(Invocation.method(
        #validateEmail,
        [input],
      )) as String?);

  @override
  String? validatePassword(String? input) =>
      (super.noSuchMethod(Invocation.method(
        #validatePassword,
        [input],
      )) as String?);

  @override
  String? validateConfirmPassword(
    String? input,
    String? password,
  ) =>
      (super.noSuchMethod(Invocation.method(
        #validateConfirmPassword,
        [
          input,
          password,
        ],
      )) as String?);

  @override
  String? validateName(String? name) => (super.noSuchMethod(Invocation.method(
        #validateName,
        [name],
      )) as String?);

  @override
  String? validatePhoneNumber(String? phoneNumber) =>
      (super.noSuchMethod(Invocation.method(
        #validatePhoneNumber,
        [phoneNumber],
      )) as String?);
}
